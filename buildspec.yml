version: 0.2


env:
  variables:
    DOCKER_USERNAME: "arvind0001"
    DOCKER_PASSWORD: "dckr_pat_TYWsDmS5GieTOUPMn4F5s6BMl0o"


phases:
  install:
    commands:
      - echo "Logging in to Docker Hub"
      - export NGINX_IMAGE_REPOSITORY=rapidfort/nginx
      - export NGINX_IMAGE_TAG=latest
      - export RF_ACCESS_TOKEN=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
      - echo "Logging in to Docker Hub"
      - docker login -u arvind0001 -p dckr_pat_TYWsDmS5GieTOUPMn4F5s6BMl0o

  build:
    commands:

      - echo "Pulling the rapidfort/nginx image from Docker Hub"
      - docker image ls
      - cd community_images/nginx/bitnami
      - ls 
      - echo "Running docker-compose up"
      - docker-compose up -d
      - docker ps -a

  post_build:
    commands:

  
      - echo "Running coverage script in the container"
      - CONTAINER_ID=$(docker ps -qf "name=bitnami-nginx-1")
      - echo "Copying the coverage script to the container"
      - docker cp coverage_script.sh $CONTAINER_ID:/coverage_script.sh

      - echo "Checking and creating user if it doesn't exist"
      - id -u daemon &>/dev/null || sudo useradd -r daemon
      - echo "Updating nginx.conf to fix the user directive"
      - sed -i 's/user www;/user daemon daemon;/g' /opt/bitnami/nginx/conf/nginx.conf
      - cat /opt/bitnami/nginx/conf/nginx.conf
      
      - echo "Validating Nginx configuration"
      - nginx -t  # Test Nginx configuration before reloading
      - /opt/bitnami/scripts/nginx/reload.sh
      - echo "Nginx configuration reloaded successfully"
      
      - echo "Running the coverage script inside the container"
      - |
        if ! docker exec $CONTAINER_ID bash /coverage_script.sh > /tmp/coverage_output.log 2>&1; then
          echo "Coverage script failed, sending SNS notification";
          aws sns publish --topic-arn "arn:aws:sns:us-east-1:550843840101:rapidfort" \
                          --subject "Build Failed: NGINX Coverage Script" \
                          --message "The coverage script failed to execute. Check the logs for details.\n\n$(cat /tmp/coverage_output.log)";
          exit 1;
        fi