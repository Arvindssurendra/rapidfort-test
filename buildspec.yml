version: 0.2


env:
  variables:
    DOCKER_USERNAME: "arvind0001"
    DOCKER_PASSWORD: "dckr_pat_TYWsDmS5GieTOUPMn4F5s6BMl0o"


phases:
  install:
    commands:
      - echo "Logging in to Docker Hub"
      - export NGINX_IMAGE_REPOSITORY=rapidfort/nginx
      - export NGINX_IMAGE_TAG=latest
      - export RF_ACCESS_TOKEN=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
      - echo "Logging in to Docker Hub"
      - docker login -u arvind0001 -p dckr_pat_TYWsDmS5GieTOUPMn4F5s6BMl0o

  build:
    commands:

      - echo "Pulling the rapidfort/nginx image from Docker Hub"
      - docker image ls
      - cd community_images/nginx/bitnami
      - ls 
      - echo "Running docker-compose up"
      - docker-compose up -d
      - docker ps -a

  post_build:
    commands:

  
      - echo "Running coverage script in the container"
      - CONTAINER_ID=$(docker ps -qf "name=bitnami-nginx-1")
      - echo "Copying the coverage script to the container"
      - docker cp coverage_script.sh $CONTAINER_ID:/coverage_script.sh

      - echo "Editing /opt/bitnami/nginx/conf/nginx.conf to replace 'user www;' with 'user daemon daemon;'"
      # Check if the file contains 'user www;' and replace it with 'user daemon daemon;'
      - if grep -q 'user www;' /opt/bitnami/nginx/conf/nginx.conf; then
            sudo sed -i 's/user www www;/user daemon daemon;/g' /opt/bitnami/nginx/conf/nginx.conf;
        fi
      # Verify that the replacement has been made
      - grep 'user daemon daemon;' /opt/bitnami/nginx/conf/nginx.conf && echo "Replacement successful"

      - echo "Running the coverage script inside the container"
      - |
        if ! docker exec $CONTAINER_ID bash /coverage_script.sh > /tmp/coverage_output.log 2>&1; then
          echo "Coverage script failed, sending SNS notification";
          aws sns publish --topic-arn "arn:aws:sns:us-east-1:550843840101:rapidfort" \
                          --subject "Build Failed: NGINX Coverage Script" \
                          --message "The coverage script failed to execute. Check the logs for details.\n\n$(cat /tmp/coverage_output.log)";
          exit 1;
        fi
      

      
      # - echo "Running the coverage script inside the container"
      # - |
      #   if ! docker exec $CONTAINER_ID bash /coverage_script.sh > /tmp/coverage_output.log 2>&1; then
      #     # If the coverage script fails
      #     echo "Coverage script failed, sending SNS failure notification";

      #     aws sns publish --topic-arn "arn:aws:sns:us-east-1:550843840101:rapidfort" \
      #                     --subject "Build Failed: NGINX Coverage Script" \
      #                     --message "The coverage script failed to execute. Check the logs for details.\n\n$(cat /tmp/coverage_output.log)";
      #     exit 1;  # Ensure the build fails
      #   else
      #     # If the coverage script succeeds
      #     echo "Coverage script succeeded, sending SNS success notification";
      #     aws sns publish --topic-arn "arn:aws:sns:us-east-1:550843840101:rapidfort" \
      #                     --subject "Build Succeeded: NGINX Coverage Script" \
      #                     --message "The coverage script executed successfully. Here are the logs:\n\n$(cat /tmp/coverage_output.log)";
      #   fi

